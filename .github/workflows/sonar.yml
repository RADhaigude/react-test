name: CI - Build, Test, SonarCloud

on:
  push:
    branches: [ main, dev, qa, master ]
  pull_request:
    branches: [ main, dev, qa ]

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'

      - name: Build & Test Backend
        run: |
          cd backend
          dotnet restore
          dotnet build --configuration Release
          dotnet test --configuration Release --collect:"XPlat Code Coverage" --results-directory ./TestResults

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: backend/TestResults

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Build & Test Frontend
        run: |
          cd frontend
          npm install
          npm run test -- --watch=false --code-coverage

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage

  sonarcloud:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.organization=radhaigude
            -Dsonar.projectKey=RADhaigude_invoice-generator-react
            -Dsonar.projectName="Invoice Generator React"
            -Dsonar.sources=frontend/src,backend
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.javascript.lcov.reportPaths=frontend/coverage/lcov.info
            -Dsonar.cs.opencover.reportsPaths=backend/TestResults/**/coverage.opencover.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # required for PR checks

